from aiogram import Router, types
from aiogram.fsm.context import FSMContext
from config.state_config import ConfirmOCRState
from creation_survey.Photo_creator.photo_processor import process_clean_text_after_ocr
from aiogram import Bot
from keyboards.button_creators.choose_photo_doc_type_keyboard import choose_photo_doc_type_keyboard

router = Router()


@router.message(ConfirmOCRState.waiting_for_choice, lambda m: m.text == "üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞–∫ –µ—Å—Ç—å")
async def confirm_send_as_is(message: types.Message, state: FSMContext, bot: Bot):
    data = await state.get_data()
    extracted_text = data.get("extracted_text", "")
    await process_clean_text_after_ocr(message, state, bot, extracted_text)


@router.message(ConfirmOCRState.waiting_for_choice, lambda m: m.text == "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Ä—É—á–Ω—É—é")
async def edit_text_manually(message: types.Message, state: FSMContext):
    await message.answer("‚úèÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç.")
    await state.set_state(ConfirmOCRState.waiting_for_manual_text)


@router.message(ConfirmOCRState.waiting_for_choice, lambda m: m.text == "üîô –û—Ç–º–µ–Ω–∏—Ç—å")
async def cancel_ocr_flow(message: types.Message, state: FSMContext):
    await message.answer(
        "‚ùå –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –í–µ—Ä–Ω—É–ª–∏—Å—å –∫ –≤—ã–±–æ—Ä—É —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞:",
        reply_markup=choose_photo_doc_type_keyboard()
    )
    await state.clear()


@router.message(ConfirmOCRState.waiting_for_manual_text)
async def handle_manual_ocr_text(message: types.Message, state: FSMContext, bot: Bot):
    await process_clean_text_after_ocr(message, state, bot, message.text)
