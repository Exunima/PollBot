from aiogram import Router, types
from aiogram.fsm.context import FSMContext
from config.state_config import TestFromPdfState, SurveyFromPdfState
from keyboards.button_creators.choose_doc_type_keyboard import choose_doc_type_keyboard

router = Router()


@router.message(lambda m: m.text == "–û—Ç–ø—Ä–∞–≤–∏—Ç—å PDF")
async def ask_type(message: types.Message, state: FSMContext):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞:", reply_markup=choose_doc_type_keyboard())


@router.message(lambda m: m.text == "üìò –¢–µ—Å—Ç")
async def start_test_pdf(message: types.Message, state: FSMContext):
    await state.update_data(document_type="test")
    await message.answer("‚è±Ô∏è –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –±—É–¥–µ—Ç –¥–∞–Ω–æ –Ω–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞? (–≤ –º–∏–Ω—É—Ç–∞—Ö, 0 ‚Äî –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è)")
    await state.set_state(TestFromPdfState.waiting_for_duration)


@router.message(lambda m: m.text == "üìã –û–ø—Ä–æ—Å")
async def start_survey_pdf(message: types.Message, state: FSMContext):
    await state.update_data(document_type="survey")
    await message.answer("üìÖ –£–∫–∞–∂–∏—Ç–µ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –æ–ø—Ä–æ—Å–∞ –≤ –¥–Ω—è—Ö (0 ‚Äî –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è):")
    await state.set_state(SurveyFromPdfState.waiting_for_duration)
